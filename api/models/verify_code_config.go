// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VerifyCodeConfig VerifyCodeConfig
//
// swagger:model VerifyCodeConfig
type VerifyCodeConfig struct {

	// verify code expire time
	// Required: true
	VerifyCodeExpireTime *int64 `json:"verify_code_expire_time"`

	// verify code interval
	// Required: true
	VerifyCodeInterval *int64 `json:"verify_code_interval"`

	// verify code limit
	// Required: true
	VerifyCodeLimit *int64 `json:"verify_code_limit"`
}

// Validate validates this verify code config
func (m *VerifyCodeConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVerifyCodeExpireTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVerifyCodeInterval(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVerifyCodeLimit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VerifyCodeConfig) validateVerifyCodeExpireTime(formats strfmt.Registry) error {

	if err := validate.Required("verify_code_expire_time", "body", m.VerifyCodeExpireTime); err != nil {
		return err
	}

	return nil
}

func (m *VerifyCodeConfig) validateVerifyCodeInterval(formats strfmt.Registry) error {

	if err := validate.Required("verify_code_interval", "body", m.VerifyCodeInterval); err != nil {
		return err
	}

	return nil
}

func (m *VerifyCodeConfig) validateVerifyCodeLimit(formats strfmt.Registry) error {

	if err := validate.Required("verify_code_limit", "body", m.VerifyCodeLimit); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this verify code config based on context it is used
func (m *VerifyCodeConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VerifyCodeConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VerifyCodeConfig) UnmarshalBinary(b []byte) error {
	var res VerifyCodeConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
