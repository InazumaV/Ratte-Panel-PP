// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TosConfig TosConfig
//
// swagger:model TosConfig
type TosConfig struct {

	// tos content
	// Required: true
	TosContent *string `json:"tos_content"`
}

// Validate validates this tos config
func (m *TosConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTosContent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TosConfig) validateTosContent(formats strfmt.Registry) error {

	if err := validate.Required("tos_content", "body", m.TosContent); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tos config based on context it is used
func (m *TosConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TosConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TosConfig) UnmarshalBinary(b []byte) error {
	var res TosConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
